version: 2.1

executors:
  toolbox-executor:
    docker:
      - image: ${AWS_ACCOUNT_ID_ECR}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/toolbox:1.0
        aws_auth:
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_ECR}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_ECR}

jobs:
  plan:
    executor: toolbox-executor
    parameters:
      environment:
        type: enum
        enum: ["dev", "qa", "uat", 'pre-prod', "prod"]
      weight:
        type: enum
        enum: ["small", "medium", "large"]
    steps:
      - checkout
      - run:
          name: Terraform dry-run
          environment:
            EB_ENVIRONMENT: << parameters.environment >>
            EB_WEIGHT: << parameters.weight >>
          command: |
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            bash /apps/ops/cd/terraform.sh `pwd`/ops/terraform plan

  deploy:
    executor: toolbox-executor
    parameters:
      environment:
        type: enum
        enum: ["dev", "qa", "uat", 'pre-prod', "prod"]
      weight:
        type: enum
        enum: ["small", "medium", "large"]
    steps:
      - checkout
      - run:
          name: Creating infrastructure and deploying stack
          environment:
            EB_ENVIRONMENT: << parameters.environment >>
            EB_WEIGHT: << parameters.weight >>
          command: |
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            bash /apps/ops/cd/terraform.sh `pwd`/ops/terraform apply
            bash /apps/ops/cd/eb_deployment.sh /apps/ops/cd `pwd`/ops/cd

  performance_test:
    executor: toolbox-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Run performance test in qa stack
          command: |
            mkdir -p /output
            export ECR_REPONAME=${PERFORMANCE_TEST_IMAGE_NAME}
            export OUTPUT_PATH=/output
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            bash /apps/qa/performance/execute_test.sh `pwd`/qa/performance/test.jmx
      - store_artifacts:
          path: /output

  rds_snapshot:
    executor: toolbox-executor
    parameters:
      environment:
        type: enum
        enum: ["dev", "qa", "uat", 'pre-prod', "prod"]
    steps:
      - checkout
      - run:
          name: backup rds instance
          environment:
            EB_ENVIRONMENT: << parameters.environment >>
          command: |
            export SERVICE=${CIRCLE_PROJECT_REPONAME}
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            create_snapshot_from_rds ${SERVICE} ${EB_ENVIRONMENT}

  create_stacks:
    executor: toolbox-executor
    parameters:
      environment:
        type: enum
        enum: ["dev", "qa", "uat", 'pre-prod', "prod"]
      weight:
        type: enum
        enum: ["small", "medium", "large"]
    steps:
      - checkout
      - run:
          name: create stacks
          environment:
            EB_ENVIRONMENT: << parameters.environment >>
            EB_WEIGHT: << parameters.weight >>
          command: |
            export SERVICE=${CIRCLE_PROJECT_REPONAME}
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            bash /apps/ops/cd/create_environment.sh `pwd`/ops/terraform /apps/ops/cd `pwd`/ops/cd

  destroy_stacks:
    executor: toolbox-executor
    parameters:
      environment:
        type: enum
        enum: ["dev", "qa", "uat", 'pre-prod', "prod"]
    steps:
      - checkout
      - run:
          name: destroy stacks
          environment:
            EB_ENVIRONMENT: << parameters.environment >>
          command: |
            export SERVICE=${CIRCLE_PROJECT_REPONAME}
            source /apps/common-functions.sh
            circle_context_variables
            assume_role ${ROLE_ARN_TO_ASSUME}
            bash /apps/ops/cd/terminate_environment.sh `pwd`/ops/terraform /apps/ops/cd

workflows:
  build-and-deploy:
    jobs:
      - deploy:
          name: deploy_dev
          environment: dev
          weight: small
          context: DevelopmentAutomation
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: qa_approval
          type: approval
          requires:
            - deploy_dev
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_qa
          environment: qa
          weight: small
          context: QaAutomation
          requires:
            - qa_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - performance_test:
          name: performance_test_qa
          context: DevelopmentAutomation
          requires:
            - deploy_qa
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: ops_approval
          type: approval
          requires:
            - deploy_dev
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_ops
          environment: ops
          weight: small
          context: DevelopmentAutomation
          requires:
            - ops_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: sit_approval
          type: approval
          requires:
            - performance_test_qa
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_sit
          environment: sit
          weight: small
          context: DevelopmentAutomation
          requires:
            - sit_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: demo_approval
          type: approval
          requires:
            - deploy_sit
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_demo
          environment: demo
          weight: large
          context: DevelopmentAutomation
          requires:
            - demo_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: uat_approval
          type: approval
          requires:
            - deploy_demo
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_uat
          environment: uat
          weight: large
          context: ProductionAutomation
          requires:
            - uat_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - plan:
          name: plan_prod
          environment: prod
          weight: large
          context: ProductionAutomation
          requires:
            - deploy_uat
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: prod_approval
          type: approval
          requires:
            - plan_prod
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - rds_snapshot:
          name: rds_snapshot_prod
          environment: prod
          context: ProductionAutomation
          requires:
            - prod_approval
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_prod
          environment: prod
          weight: large
          context: ProductionAutomation
          requires:
            - rds_snapshot_prod
          filters:
            tags:
              only: /1.0.*/
            branches:
              ignore: /.*/

  hotfix:
    jobs:
      - approval:
          name: uat_approval
          type: approval
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_uat
          environment: uat
          weight: large
          context: ProductionAutomation
          requires:
            - uat_approval
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/
      - plan:
          name: plan_prod
          environment: prod
          weight: large
          context: ProductionAutomation
          requires:
            - deploy_uat
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/
      - approval:
          name: prod_approval
          type: approval
          requires:
            - plan_prod
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/
      - rds_snapshot:
          name: rds_snapshot_prod
          environment: prod
          context: ProductionAutomation
          requires:
            - prod_approval
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/
      - deploy:
          name: deploy_prod
          environment: prod
          weight: large
          context: ProductionAutomation
          requires:
            - rds_snapshot_prod
          filters:
            tags:
              only: /hotfix-1.0.*/
            branches:
              ignore: /.*/

  # schedule_destroy_stacks_qa:
  #   triggers:
  #     - schedule:
  #         cron: "30 15 * * 1-5"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - destroy_stacks:
  #         name: destroy_stacks_qa
  #         environment: qa
  #         context: DevelopmentAutomation

  schedule_destroy_stacks_sit:
    triggers:
      - schedule:
          cron: "30 15 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - destroy_stacks:
          name: destroy_stacks_sit
          environment: sit
          context: DevelopmentAutomation

  schedule_destroy_stacks_demo:
    triggers:
      - schedule:
          cron: "30 15 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - destroy_stacks:
          name: destroy_stacks_demo
          environment: demo
          context: DevelopmentAutomation

  # schedule_create_stacks_qa:
  #   triggers:
  #     - schedule:
  #         cron: "0 23 * * 0-4"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - create_stacks:
  #         name: create_stacks_qa
  #         environment: qa
  #         weight: small
  #         context: DevelopmentAutomation

  # schedule_create_stacks_sit:
  #   triggers:
  #     - schedule:
  #         cron: "0 23 * * 0-4"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - create_stacks:
  #         name: create_stacks_sit
  #         environment: sit
  #         weight: small
  #         context: DevelopmentAutomation

  # schedule_create_stacks_demo:
  #   triggers:
  #     - schedule:
  #         cron: "0 21 * * 0-4"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - create_stacks:
  #         name: create_stacks_demo
  #         environment: demo
  #         weight: large
  #         context: DevelopmentAutomation

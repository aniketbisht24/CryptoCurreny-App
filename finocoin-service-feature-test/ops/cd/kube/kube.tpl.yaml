# # https://github.com/RobinNagpal/kubernetes-tutorials/tree/master/06_tools/007_alb_ingress/01_eks
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ${BITBUCKET_REPO_SLUG}
#   labels:
#     app: ${BITBUCKET_REPO_SLUG}
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: ${BITBUCKET_REPO_SLUG}
#       env: ${ENV}
#   template:
#     metadata:
#       labels:
#         app: ${BITBUCKET_REPO_SLUG}
#         env: ${ENV}
#     spec:
#       containers:
#       - name: ${BITBUCKET_REPO_SLUG}
#         image: ${AWS_ACCOUNT_ID_ECR}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${BITBUCKET_REPO_SLUG}:${APP_TAG_PREFIX}.${BITBUCKET_BUILD_NUMBER}
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 3000
#           protocol: TCP
#         env:
#         - name: DB_NAME
#           value: node_microservice
#         - name: DB_USER_NAME
#           value: postgres
#         - name: DB_PASSWORD
#           value: password
#         - name: DB_HOST
#           value: development.cpxn3s483ymd.ap-south-1.rds.amazonaws.com
#         - name: IDENTITY_SERVICE_URL
#           value: https://auth-dev.eazyfin.com
#         - name: DOMAIN
#           value: https://${BITBUCKET_REPO_SLUG}${ENV}.eazyfin.com
#         readinessProbe:
#           httpGet:
#             path: /healthcheck
#             port: 3000
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           timeoutSeconds: 3
#           failureThreshold: 1
#         livenessProbe:
#           httpGet:
#             path: /ping
#             port: 3000
#           initialDelaySeconds: 60
#           periodSeconds: 10
#           timeoutSeconds: 3
#           failureThreshold: 1
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ${BITBUCKET_REPO_SLUG}-service
# spec:
#   type: NodePort
#   selector:
#     app: ${BITBUCKET_REPO_SLUG}
#   ports:
#     - port: 3000
#       targetPort: 3000


# https://github.com/RobinNagpal/kubernetes-tutorials/tree/master/06_tools/007_alb_ingress/01_eks
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}
  labels:
    app: ${PROJECT_NAME}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
    spec:
      containers:
      - name: ${PROJECT_NAME}
        image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${CIRCLE_PROJECT_REPONAME}:${CIRCLECI_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: DB_NAME
          value: $DB_NAME
        - name: DB_USER_NAME
          value: $DB_USER_NAME
        - name: DB_PASSWORD
          value: $DB_PASSWORD
        - name: DB_HOST
          value: $DB_HOST
        - name: IDENTITY_SERVICE_URL
          value: https://auth-dev.eazyfin.com
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /ping
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT_NAME}-service
spec:
  type: NodePort
  selector:
    app: ${PROJECT_NAME}
  ports:
    - port: 3000
      targetPort: 3000
